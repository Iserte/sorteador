{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","users","setUsers","name","setName","tickets","setTickets","totalTickets","setTotalTickets","winners","setWinners","winnersQuantity","setWinnersQuantity","useEffect","console","log","className","autoComplete","htmlFor","type","id","value","onChange","e","target","toLowerCase","onClick","event","preventDefault","_users","filter","user","percentage","reduce","previous","current","Number","map","toFixed","length","winner","entries","forEach","index","push","_winners","i","_winner","Math","floor","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAwGeA,MA/Ff,WACE,MAA0BC,mBAAiB,IAA3C,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA8BJ,mBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,GAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAA4BR,mBAAS,IAArC,mBACA,GADA,UAC8BA,mBAAmB,KAAjD,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAA8CV,mBAAS,GAAvD,mBAAOW,EAAP,KAAwBC,EAAxB,KAuCA,OArCAC,qBAAU,WACRC,QAAQC,IAAId,GACZa,QAAQC,IAAIR,KACX,CAACN,IAmCF,sBAAKe,UAAU,MAAf,UACE,uBAAMC,aAAa,MAAnB,UACE,mDACA,uBAAOC,QAAQ,OAAf,gCACA,uBAAOC,KAAK,OAAOhB,KAAK,OAAOiB,GAAG,OAAOC,MAAOlB,EAAMmB,SAAU,SAACC,GAAD,OAAOnB,EAAQmB,EAAEC,OAAOH,MAAMI,kBAE9F,uBAAOP,QAAQ,UAAf,qBACA,uBAAOC,KAAK,SAAShB,KAAK,UAAUiB,GAAG,UAAUC,MAAOhB,EAASiB,SAAU,SAACC,GAAD,OAAOjB,EAAWiB,EAAEC,OAAOH,UAEtG,wBAAQK,QA1Cd,SAAmBC,GACjBA,EAAMC,iBAEN,IAAMC,EAAM,sBAAO5B,EAAM6B,QAAO,SAAAC,GAAI,OAAIA,EAAK5B,OAASA,MAA1C,CAAiD,CAAEA,OAAME,UAAS2B,WAAY,KACpFzB,EAAesB,EAAOI,QAAO,SAACC,EAAUC,GAAc,OAAOC,OAAOF,GAAYE,OAAOD,EAAQ9B,WAAY,GACjHwB,EAAOQ,KAAI,SAAAN,GACTA,EAAKC,YAA6B,IAAfD,EAAK1B,QAAgBE,GAAc+B,QAAQ,MAEhEpC,EAAS2B,GACTrB,EAAgBD,IAiCZ,0BAGF,gCACGE,EAAQ8B,OAAS,GAChB,iCACE,2CACC9B,EAAQ4B,KAAI,SAAAG,GAAM,OACjB,6BAAKA,UAIX,uBAAOtB,QAAQ,OAAf,qCACA,uBAAOC,KAAK,SAAShB,KAAK,kBAAkBiB,GAAG,kBAAkBC,MAAOV,EAAiBW,SAAU,SAACC,GAAD,OAAOX,EAAmBW,EAAEC,OAAOH,UACtI,wBAAQK,QA5Cd,SAAoBC,GAClBA,EAAMC,iBACN,IAAIa,EAAoB,GACxBxC,EAAMyC,SAAQ,SAAAX,GACZ,IAAK,IAAIY,EAAQ,EAAGA,EAAQZ,EAAK1B,QAASsC,IACxCF,EAAQG,KAAKb,EAAK5B,SAMtB,IAFA,IAAM0C,EAAqB,GATgB,WAWlCC,GACP,IAAMC,EAAUN,EAAQO,KAAKC,MAAMD,KAAKE,SAAWT,EAAQF,SAC3DM,EAASD,KAAKG,GACdjC,QAAQC,IAAIgC,GACZN,EAAUA,EAAQX,QAAO,SAAAP,GAAC,OAAIA,IAAMwB,MAJ7BD,EAAI,EAAGA,EAAInC,EAAiBmC,IAAM,IAM3CpC,EAAWmC,IA2BP,wBAEF,+CACA,kCACE,gCACE,+BACE,oDACA,yCACA,2DAGJ,gCACG5C,EAAMoC,KAAI,SAAAN,GAAI,OACb,+BACE,6BAAKA,EAAK5B,OACV,6BAAK4B,EAAK1B,UACV,+BAAK0B,EAAKC,WAAV,SAHOD,EAAK5B,kBCvF1BgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1607414a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\ninterface user {\n  name: string,\n  tickets: number,\n  percentage: number\n}\n\nfunction App() {\n  const [users, setUsers] = useState<user[]>([]);\n  const [name, setName] = useState(\"\");\n  const [tickets, setTickets] = useState(0);\n  const [totalTickets, setTotalTickets] = useState(0);\n  const [winner, setWinner] = useState(\"\");\n  const [winners, setWinners] = useState<string[]>([]);\n  const [winnersQuantity, setWinnersQuantity] = useState(1);\n\n  useEffect(() => {\n    console.log(users)\n    console.log(totalTickets)\n  }, [users])\n\n  function handleAdd(event: React.MouseEvent) {\n    event.preventDefault();\n\n    const _users = [...users.filter(user => user.name !== name), { name, tickets, percentage: 0 }]\n    const totalTickets = _users.reduce((previous, current) => { return Number(previous) + Number(current.tickets) }, 0)\n    _users.map(user => {\n      user.percentage = (user.tickets * 100 / totalTickets).toFixed(2) as unknown as number\n    })\n    setUsers(_users)\n    setTotalTickets(totalTickets)\n  }\n\n  function handleDraw(event: React.MouseEvent) {\n    event.preventDefault();\n    let entries: string[] = []\n    users.forEach(user => {\n      for (let index = 0; index < user.tickets; index++) {\n        entries.push(user.name)\n      }\n    })\n    \n    const _winners: string[] = []\n\n    for (let i = 0; i < winnersQuantity; i++) {\n      const _winner = entries[Math.floor(Math.random() * entries.length)];\n      _winners.push(_winner)\n      console.log(_winner)\n      entries = entries.filter(e => e !== _winner)\n    }\n    setWinners(_winners)\n  }\n\n  return (\n    <div className=\"App\">\n      <form autoComplete=\"off\">\n        <h2>Adicionar Tickets</h2>\n        <label htmlFor=\"name\">Nome de Família</label>\n        <input type=\"text\" name=\"name\" id=\"name\" value={name} onChange={(e) => setName(e.target.value.toLowerCase())} />\n\n        <label htmlFor=\"tickets\">Tickets</label>\n        <input type=\"number\" name=\"tickets\" id=\"tickets\" value={tickets} onChange={(e) => setTickets(e.target.value as unknown as number)} />\n\n        <button onClick={handleAdd}>Adicionar</button>\n      </form>\n      \n      <div>\n        {winners.length > 0 && (\n          <span>\n            <h1>Sorteados</h1>\n            {winners.map(winner => (\n              <h2>{winner}</h2>\n            ))}\n          </span>\n        )}\n        <label htmlFor=\"name\">Quantidade de Sorteados</label>\n        <input type=\"number\" name=\"winnersQuantity\" id=\"winnersQuantity\" value={winnersQuantity} onChange={(e) => setWinnersQuantity(e.target.value as unknown as number)} />\n        <button onClick={handleDraw}>Sortear</button>\n      </div>\n      <h2>Participantes</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Nome de Família</th>\n            <th>Tickets</th>\n            <th>Chance de Vitória</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map(user => (\n            <tr key={user.name}>\n              <td>{user.name}</td>\n              <td>{user.tickets}</td>\n              <td>{user.percentage}%</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}